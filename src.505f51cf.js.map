{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","timer","document","querySelector","days","hours","mins","secs","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","textContent","pad","Math","floor","value","String","padStart","startTimer","start"],"mappings":";AA4CA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA3CMA,IAAAA,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BA,KAAAA,WAAaA,EAEbC,KAAAA,MAAQC,SAASC,cAAcJ,GAC/BK,KAAAA,KAAO,KAAKH,MAAME,cAAc,uBAChCE,KAAAA,MAAQ,KAAKJ,MAAME,cAAc,wBACjCG,KAAAA,KAAO,KAAKL,MAAME,cAAc,uBAChCI,KAAAA,KAAO,KAAKN,MAAME,cAAc,uBAmCzC,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAhCE,MAAA,WAAQ,IAAA,EAAA,KACNK,YAAY,WACJC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKZ,WAAaS,EAC9BI,EAAO,EAAKC,kBAAkBF,GACpC,EAAKR,KAAKW,YAAcF,EAAKT,KAC7B,EAAKC,MAAMU,YAAcF,EAAKR,MAC9B,EAAKC,KAAKS,YAAcF,EAAKP,KAC7B,EAAKC,KAAKQ,YAAcF,EAAKN,MAC5B,OAuBP,CAAA,IAAA,oBApBE,MAAA,SAAkBM,GAOT,MAAA,CAAET,KANI,KAAKY,IAAIC,KAAKC,MAAML,EAAO,IAAO,GAAK,GAAK,KAM1CR,MALD,KAAKW,IACjBC,KAAKC,MAAOL,EAAQ,MAAyB,OAIzBP,KAFT,KAAKU,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAElCN,KADf,KAAKS,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,SAc5D,CAAA,IAAA,MAVE,MAAA,SAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SASrC,EA3CMvB,GAsCAwB,EAAa,IAAIxB,EAAe,CACpCC,SAAU,WACVC,WAAY,IAAIU,KAAK,kBAGvBY,EAAWC","file":"src.505f51cf.js","sourceRoot":"../src","sourcesContent":["  \nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = targetDate;\n\n    this.timer = document.querySelector(selector);\n    this.days = this.timer.querySelector('[data-value=\"days\"]');\n    this.hours = this.timer.querySelector('[data-value=\"hours\"]');\n    this.mins = this.timer.querySelector('[data-value=\"mins\"]');\n    this.secs = this.timer.querySelector('[data-value=\"secs\"]');\n  }\n\n  start() {\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = this.targetDate - currentTime;\n      const time = this.getTimeComponents(deltaTime);\n      this.days.textContent = time.days;\n      this.hours.textContent = time.hours;\n      this.mins.textContent = time.mins;\n      this.secs.textContent = time.secs;\n    }, 1000);\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / 1000 / 60 / 60 / 24));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst startTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2022'),\n});\n\nstartTimer.start();"]}